{"ast":null,"code":"var _jsxFileName = \"/Users/gordon/mywork/mytraining/2020-v1/complete-react-developer-in-2020-fromPaul/crown-app/src/components/signup/signup.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { sagaSignUpStart } from '../redux/user/user-action';\nimport './signup.scss';\n\nconst SignUp = ({\n  sagaSignUpStart\n}) => {\n  const [credential, setCredential] = useState({\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    displayName: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    passwordConfirm\n  } = credential;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredential({ ...credential,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== passwordConfirm) {\n      alert('password do not match');\n      return;\n    }\n\n    sagaSignUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"I do not have account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    lable: \"Display Name\",\n    require: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    lable: \"email\",\n    require: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    lable: \"Password\",\n    require: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"passwordConfirm\",\n    value: passwordConfirm,\n    onChange: handleChange,\n    lable: \"Password Confirm\",\n    require: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")));\n};\n\nexport default connect(null, {\n  sagaSignUpStart\n})(SignUp);","map":{"version":3,"sources":["/Users/gordon/mywork/mytraining/2020-v1/complete-react-developer-in-2020-fromPaul/crown-app/src/components/signup/signup.component.js"],"names":["React","useState","connect","FormInput","CustomButton","sagaSignUpStart","SignUp","credential","setCredential","email","password","passwordConfirm","displayName","handleChange","e","name","value","target","handleSubmit","preventDefault","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { sagaSignUpStart } from '../redux/user/user-action';\n\nimport './signup.scss';\n\nconst SignUp = ({ sagaSignUpStart }) => {\n    const [credential, setCredential] = useState({ email: '', password: '', passwordConfirm: '', displayName: ''});\n\n    const { displayName, email, password, passwordConfirm } = credential;\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setCredential({ ...credential, [name]: value});\n    }\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if (password !== passwordConfirm) {\n            alert('password do not match');\n            return;\n        }\n\n        sagaSignUpStart({ email, password, displayName });\n    }\n    return (\n        <div className=\"sign-up\">\n            <h2 className=\"title\">I do not have account</h2>\n            <span>Sign up with your email and password</span>\n\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange} lable=\"Display Name\" require=\"true\"/>\n\n                <FormInput type=\"text\" name=\"email\" value={email} onChange={handleChange} lable=\"email\" require=\"true\"/>\n\n                <FormInput type=\"text\" name=\"password\" value={password} onChange={handleChange} lable=\"Password\" require=\"true\"/>\n\n                <FormInput type=\"text\" name=\"passwordConfirm\" value={passwordConfirm} onChange={handleChange} lable=\"Password Confirm\" require=\"true\"/>\n\n                <CustomButton type=\"submit\">Sign Up</CustomButton>\n            </form>\n        </div>\n    )\n\n}\n\nexport default connect(null, { sagaSignUpStart })(SignUp);\n"]},"metadata":{},"sourceType":"module"}