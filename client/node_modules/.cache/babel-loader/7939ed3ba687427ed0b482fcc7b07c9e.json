{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { auth, googleProvider, convertCollectionsSnapshotToMap } from '../../../firebase/firebase.util';\nimport { SAGA_EMAIL_USER_START, SAGA_GOOGLE_USER_START } from './type';\nimport { sagaEmailUserSuccess, sagaEmailUserFailed, sagaGoogleUserFailed, sagaGoogleUserSUCCESS } from './user-action';\n\nfunction* startGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const data = yield call(convertCollectionsSnapshotToMap, user);\n    const userSnapshot = yield data.get();\n    yield put(sagaGoogleUserSUCCESS({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(sagaGoogleUserFailed(e.message));\n  }\n}\n\nexport function* sagaGoogleUserStart() {\n  yield takeLatest(SAGA_GOOGLE_USER_START, startGoogle);\n}\n\nfunction* startEmail({\n  payload: {\n    email,\n    password\n  }\n}) {}\n\nexport function* sagaEmailUserStart() {\n  yield takeLatest(SAGA_EMAIL_USER_START, startEmail);\n}\nexport function* userSagas() {\n  yield all([call(sagaGoogleUserStart), call(sagaEmailUserStart)]);\n}","map":{"version":3,"sources":["/Users/gordon/mywork/mytraining/2020-v1/complete-react-developer-in-2020-fromPaul/crown-app/src/components/redux/user/user-sagas.js"],"names":["takeLatest","call","put","all","auth","googleProvider","convertCollectionsSnapshotToMap","SAGA_EMAIL_USER_START","SAGA_GOOGLE_USER_START","sagaEmailUserSuccess","sagaEmailUserFailed","sagaGoogleUserFailed","sagaGoogleUserSUCCESS","startGoogle","user","signInWithPopup","data","userSnapshot","get","id","e","message","sagaGoogleUserStart","startEmail","payload","email","password","sagaEmailUserStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,+BAA/B,QAAsE,iCAAtE;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,QAA9D;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,EAAoDC,oBAApD,EAA0EC,qBAA1E,QAAuG,eAAvG;;AAIA,UAAUC,WAAV,GAAwB;AACpB,MAAI;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,IAAI,CAACW,eAAL,CAAqBV,cAArB,CAAvB;AAEA,UAAMW,IAAI,GAAG,MAAMf,IAAI,CAACK,+BAAD,EAAkCQ,IAAlC,CAAvB;AACA,UAAMG,YAAY,GAAG,MAAMD,IAAI,CAACE,GAAL,EAA3B;AAEA,UAAMhB,GAAG,CAACU,qBAAqB,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACD,IAAb;AAAzB,KAAD,CAAtB,CAAT;AACH,GARD,CAQE,OAAOI,CAAP,EAAU;AACR,UAAMlB,GAAG,CAACS,oBAAoB,CAACS,CAAC,CAACC,OAAH,CAArB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AAEnC,QAAMtB,UAAU,CAACQ,sBAAD,EAAyBK,WAAzB,CAAhB;AACH;;AAKD,UAAUU,UAAV,CAAqB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAArB,EAAsD,CAErD;;AAED,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACO,qBAAD,EAAwBgB,UAAxB,CAAhB;AACH;AAED,OAAO,UAAUK,SAAV,GAAsB;AACzB,QAAMzB,GAAG,CAAC,CAACF,IAAI,CAACqB,mBAAD,CAAL,EAA4BrB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport { auth, googleProvider, convertCollectionsSnapshotToMap } from '../../../firebase/firebase.util';\nimport { SAGA_EMAIL_USER_START, SAGA_GOOGLE_USER_START } from './type';\nimport { sagaEmailUserSuccess, sagaEmailUserFailed, sagaGoogleUserFailed, sagaGoogleUserSUCCESS } from './user-action';\n\n\n\nfunction* startGoogle() {\n    try {\n      \n        const { user } = yield auth.signInWithPopup(googleProvider);\n\n        const data = yield call(convertCollectionsSnapshotToMap, user);\n        const userSnapshot = yield data.get();\n\n        yield put(sagaGoogleUserSUCCESS({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch (e) {\n        yield put(sagaGoogleUserFailed(e.message));\n    }\n}\n\nexport function* sagaGoogleUserStart() {\n \n    yield takeLatest(SAGA_GOOGLE_USER_START, startGoogle);\n}\n\n\n\n\nfunction* startEmail({ payload: { email, password }}) {\n    \n}\n\nexport function* sagaEmailUserStart() {\n    yield takeLatest(SAGA_EMAIL_USER_START, startEmail);\n}\n\nexport function* userSagas() {\n    yield all([call(sagaGoogleUserStart), call(sagaEmailUserStart)]);\n}"]},"metadata":{},"sourceType":"module"}