{"ast":null,"code":"var _jsxFileName = \"/Users/gordon/mywork/mytraining/2020-v1/complete-react-developer-in-2020-fromPaul/crown-app/src/pages/shop/shop.component.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; // import { selectShopCollections } from '../../components/redux/shop/shop-selector';\n\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { fetchShop } from '../../components/redux/shop/shop-action';\nimport { WithSpinner } from '../../components/withspinner/withspinner.component';\nimport { selectShopCollectionFlag } from '../../components/redux/shop/shop-selector';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionCategory from '../../components/collection-category/collection-category.component';\nconst CollectionOverViewHOC = WithSpinner(CollectionOverview);\nconst CollectionCategoryOC = WithSpinner(CollectionCategory);\n\nclass Shop extends Component {\n  // state = {\n  //     loading: true\n  // }\n  componentDidMount() {\n    this.props.fetchShop(); // const collectionRef = firestore.collection('collections');\n\n    /*\n    collectionRef.onSnapshot(snopshot => {\n        const data = convertCollectionsSnapshotToMap(snopshot);\n         this.props.addShop(data);\n        this.setState({ loading: false })\n    });*/\n\n    /*\n    collectionRef.get().then(\n        snopshot => {\n            const data = convertCollectionsSnapshotToMap(snopshot);\n                 this.props.addShop(data);\n            this.setState({ loading: false })\n        }\n    );*/\n    //promise\n    //collectionRef.get().then()\n    //fetch function\n    //fetch(url).then(response=>response.json()).then()\n  }\n\n  render() {\n    const {\n      match,\n      loading\n    } = this.props; // const { loading } = this.state;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.path,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverViewHOC, Object.assign({\n        loading: !loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n; // const Shop = ({ match }) => (\n//     <div className=\"shop-page\">\n//         <Route exact path={match.path} component={CollectionOverview}/>\n//         <Route path={`${match.path}/:category`} component={CollectionCategory}/>\n//     </div>\n// );\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectShopCollectionFlag\n});\nexport default connect(mapStateToProps, {\n  fetchShop\n})(Shop); // import { SHOP_DATA } from './shop.data';\n\n/*\nimport CollectionView from '../../components/collection-view/collection-view.component';\n\nconst Shop = ({ collections }) => (\n    <div className=\"shop-page\">\n        {collections.map(({id, ...otherProps}) => {\n            return (\n                <CollectionView key={id} {...otherProps}/>\n            )\n        })}\n    </div>\n);\n\nconst mapDispatchToProps = createStructuredSelector({\n    collections: selectShopCollections\n});\n\nexport default connect(mapDispatchToProps)(Shop);\n*/\n\n/*\nclass Shop extends React.Component {\n    constructor() {\n        super(...arguments);\n\n        this.state = {\n            collections: SHOP_DATA\n        }\n    }\n    render() {\n        return (\n            <div className=\"shop-page\">\n                {this.state.collections.map(({id, ...otherProps}) => {\n\n                    return (\n                        <CollectionView key={id} {...otherProps}/>\n                    )\n                })}\n            </div>\n        )\n    }\n}\nexport default Shop;\n*/","map":{"version":3,"sources":["/Users/gordon/mywork/mytraining/2020-v1/complete-react-developer-in-2020-fromPaul/crown-app/src/pages/shop/shop.component.js"],"names":["React","Component","connect","createStructuredSelector","Route","firestore","convertCollectionsSnapshotToMap","fetchShop","WithSpinner","selectShopCollectionFlag","CollectionOverview","CollectionCategory","CollectionOverViewHOC","CollectionCategoryOC","Shop","componentDidMount","props","render","match","loading","path","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,WAAT,QAA4B,oDAA5B;AACA,SAASC,wBAAT,QAAyC,2CAAzC;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AAEA,MAAMC,qBAAqB,GAAGJ,WAAW,CAACE,kBAAD,CAAzC;AACA,MAAMG,oBAAoB,GAAGL,WAAW,CAACG,kBAAD,CAAxC;;AAEA,MAAMG,IAAN,SAAmBb,SAAnB,CAA6B;AACzB;AACA;AACA;AACAc,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWT,SAAX,GADgB,CAEhB;;AAEA;;;;;;;AAOA;;;;;;;;AAUA;AACA;AACA;AACA;AACH;;AACDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKH,KAAhC,CADK,CAEL;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEE,KAAK,CAACE,IAAzB;AAA+B,MAAA,MAAM,EAAEJ,KAAK,iBAAI,oBAAC,qBAAD;AAAuB,QAAA,OAAO,EAAE,CAACG;AAAjC,SAA8CH,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAvCwB;;AAwC5B,C,CAGD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,eAAe,GAAGlB,wBAAwB,CAAC;AAC7CgB,EAAAA,OAAO,EAAEV;AADoC,CAAD,CAAhD;AAKA,eAAeP,OAAO,CAACmB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAwCO,IAAxC,CAAf,C,CAGA;;AACA;;;;;;;;;;;;;;;;;;;;AAmBA","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n// import { selectShopCollections } from '../../components/redux/shop/shop-selector';\nimport { Route } from 'react-router-dom';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { fetchShop } from '../../components/redux/shop/shop-action';\nimport { WithSpinner } from '../../components/withspinner/withspinner.component';\nimport { selectShopCollectionFlag } from '../../components/redux/shop/shop-selector';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionCategory from '../../components/collection-category/collection-category.component';\n\nconst CollectionOverViewHOC = WithSpinner(CollectionOverview);\nconst CollectionCategoryOC = WithSpinner(CollectionCategory);\n\nclass Shop extends Component {\n    // state = {\n    //     loading: true\n    // }\n    componentDidMount() {\n        this.props.fetchShop();\n        // const collectionRef = firestore.collection('collections');\n\n        /*\n        collectionRef.onSnapshot(snopshot => {\n            const data = convertCollectionsSnapshotToMap(snopshot);\n\n            this.props.addShop(data);\n            this.setState({ loading: false })\n        });*/\n        /*\n        collectionRef.get().then(\n            snopshot => {\n                const data = convertCollectionsSnapshotToMap(snopshot);\n    \n                this.props.addShop(data);\n                this.setState({ loading: false })\n            }\n        );*/\n\n        //promise\n        //collectionRef.get().then()\n        //fetch function\n        //fetch(url).then(response=>response.json()).then()\n    }\n    render() {\n        const { match, loading } = this.props;\n        // const { loading } = this.state;\n  \n        return (\n            <div className=\"shop-page\">\n                <Route exact path={match.path} render={props => <CollectionOverViewHOC loading={!loading} {...props}/>}/>\n            </div>\n        )\n    }\n};\n\n\n// const Shop = ({ match }) => (\n//     <div className=\"shop-page\">\n//         <Route exact path={match.path} component={CollectionOverview}/>\n//         <Route path={`${match.path}/:category`} component={CollectionCategory}/>\n//     </div>\n// );\n\nconst mapStateToProps = createStructuredSelector({\n    loading: selectShopCollectionFlag\n})\n\n\nexport default connect(mapStateToProps, { fetchShop })(Shop);\n\n\n// import { SHOP_DATA } from './shop.data';\n/*\nimport CollectionView from '../../components/collection-view/collection-view.component';\n\nconst Shop = ({ collections }) => (\n    <div className=\"shop-page\">\n        {collections.map(({id, ...otherProps}) => {\n            return (\n                <CollectionView key={id} {...otherProps}/>\n            )\n        })}\n    </div>\n);\n\nconst mapDispatchToProps = createStructuredSelector({\n    collections: selectShopCollections\n});\n\nexport default connect(mapDispatchToProps)(Shop);\n*/\n/*\nclass Shop extends React.Component {\n    constructor() {\n        super(...arguments);\n\n        this.state = {\n            collections: SHOP_DATA\n        }\n    }\n    render() {\n        return (\n            <div className=\"shop-page\">\n                {this.state.collections.map(({id, ...otherProps}) => {\n\n                    return (\n                        <CollectionView key={id} {...otherProps}/>\n                    )\n                })}\n            </div>\n        )\n    }\n}\nexport default Shop;\n*/\n\n"]},"metadata":{},"sourceType":"module"}