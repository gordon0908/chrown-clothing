{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { auth, googleProvider } from '../../../firebase/firebase.util';\nimport { SAGA_EMAIL_USER_START, SAGA_GOOGLE_USER_START } from './type';\nimport { sagaEmailUserSuccess, sagaEmailUserFailed, sagaGoogleUserFailed, sagaGoogleUserSUCCESS } from './user-action';\n\nfunction* startGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n  } catch (e) {\n    yield put(sagaGoogleUserFailed(e.message));\n  }\n}\n\nexport function* sagaGoogleUserStart() {\n  yield takeLatest(SAGA_GOOGLE_USER_START, startGoogle);\n}\nexport function* userSagas() {\n  yield all([call(sagaGoogleUserStart)]);\n}","map":{"version":3,"sources":["/Users/gordon/mywork/mytraining/2020-v1/complete-react-developer-in-2020-fromPaul/crown-app/src/components/redux/user/user-sagas.js"],"names":["takeLatest","call","put","all","auth","googleProvider","SAGA_EMAIL_USER_START","SAGA_GOOGLE_USER_START","sagaEmailUserSuccess","sagaEmailUserFailed","sagaGoogleUserFailed","sagaGoogleUserSUCCESS","startGoogle","user","signInWithPopup","e","message","sagaGoogleUserStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,QAAqC,iCAArC;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,QAA9D;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,EAAoDC,oBAApD,EAA0EC,qBAA1E,QAAuG,eAAvG;;AAIA,UAAUC,WAAV,GAAwB;AACpB,MAAI;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAAvB;AAGH,GALD,CAKE,OAAOU,CAAP,EAAU;AACR,UAAMb,GAAG,CAACQ,oBAAoB,CAACK,CAAC,CAACC,OAAH,CAArB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AAEnC,QAAMjB,UAAU,CAACO,sBAAD,EAAyBK,WAAzB,CAAhB;AACH;AAED,OAAO,UAAUM,SAAV,GAAsB;AACzB,QAAMf,GAAG,CAAC,CAACF,IAAI,CAACgB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport { auth, googleProvider } from '../../../firebase/firebase.util';\nimport { SAGA_EMAIL_USER_START, SAGA_GOOGLE_USER_START } from './type';\nimport { sagaEmailUserSuccess, sagaEmailUserFailed, sagaGoogleUserFailed, sagaGoogleUserSUCCESS } from './user-action';\n\n\n\nfunction* startGoogle() {\n    try {\n      \n        const { user } = yield auth.signInWithPopup(googleProvider);\n\n      \n    } catch (e) {\n        yield put(sagaGoogleUserFailed(e.message));\n    }\n}\n\nexport function* sagaGoogleUserStart() {\n \n    yield takeLatest(SAGA_GOOGLE_USER_START, startGoogle);\n}\n\nexport function* userSagas() {\n    yield all([call(sagaGoogleUserStart)]);\n}"]},"metadata":{},"sourceType":"module"}